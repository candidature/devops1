def ex(msg, admin, submitter ){
    emailext(mimeType: 'text/html', replyTo: admin, 
                 body: 'You did not fill all the fields in the form: ' + msg  + " For job $JOB_NAME , $BUILD_DISPLAY_NAME",
                 subject: 'Missing option while filling form on ' + "$JENKINS_URL",
                 to: submitter )
    echo "$submitter"
    currentBuild.result = 'ABORTED'
    error('MISSING PARAM: ' + msg)
}

pipeline {
  agent any
  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
    //disableConcurrentBuilds()
    timeout(time: 1, unit: 'DAYS')
    timestamps()
  }
  environment {
    USER = "build"
    ADMIN_EMAIL = 'pankaj.gupta@broadcom.com'
    ADMIN_GROUP = ''
    submitter = ''    
  }
  parameters{
    //choice(name: 'dry_run', choices: "yes\nno", description: 'Dry run')
    validatingString(name: 'project_name',defaultValue: "NONE", regex: '^[a-zA-Z0-9_]{5,}$', failedValidationMessage: 'Missing Project name', description: 'Enter Your Project name - We capture it for tracking and reporting purpose')
    validatingString(name: 'release_name',defaultValue: "NONE", regex: '^[a-zA-Z0-9_]{5,}$', failedValidationMessage: 'Missing Release name', description: 'Enter Your Release name/number')
    choice(name: 'variant', choices: "IOS\nWebApp/DistributionSystems+Desktop\nAndroid\nMainframe", description: 'Select Variant for VPAT')
    validatingString(name: 'start_date',defaultValue: 'dd/mm/yyyy', regex: '^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.]((19|20)\\d\\d)$' , failedValidationMessage: 'Specify date in proper format', description: 'Tentative VPAT Start Date in dd/mm/yyyy format')
    validatingString(name: 'finish_date',defaultValue: 'dd/mm/yyyy', regex: '^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.]((19|20)\\d\\d)$' , failedValidationMessage: 'Specify date in proper format', description: 'Tentative VPAT End Date in dd/mm/yyyy format')
    validatingString(name: 'release_date',defaultValue: 'dd/mm/yyyy', regex: '^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.]((19|20)\\d\\d)$' , failedValidationMessage: 'Specify date in proper format', description: 'Tentative your product release Date in dd/mm/yyyy format')

  }
  stages {
  
    stage("check params and Initiate VPAT Request") {
        steps {
            wrap([$class: 'BuildUser']) {
            script {
                submitter = "${BUILD_USER_EMAIL}"
                println(getBinding().hasVariable(params.project_name))
                println(getBinding().hasVariable(params.release_name))
                
                //make some crazy validation
                if ("$params.project_name" == 'NONE') {ex("project_name", "$ADMIN_EMAIL", "${BUILD_USER_EMAIL}")}
                if ("$params.release_name" == 'NONE') {ex("release_name", "$ADMIN_EMAIL", "${BUILD_USER_EMAIL}")}
                currentBuild.displayName = "$project_name"
                currentBuild.description = "Release: $release_name"
                
            }//end script
            }//end wrap
        }//end steps
    }//end stage
    
    /*stage('Set environment') {
      steps{
        wrap([$class: 'BuildUser']) {
          
          echo "You are ${BUILD_USER}"
        script {
            
          if("${params.dry_run}" == 'yes') {
            currentBuild.result = 'ABORTED'
            error('Current Build aborted, job parameterized')
          }//end if
          
          ansiColor('xterm') {
            echo "hello world"
            echo "$USER"
          }//end ansi
        }//end script
        }//end BuildUser plugin block
        
        }//end steps
    }//end stage
    */
    stage('Sending VPAT documents in email') {
      steps{
        script {
        echo "Sending documents by email to ..."
        echo "$ADMIN_EMAIL"
        
        echo "${params.email}"
        emailext(mimeType: 'text/html', replyTo: "$ADMIN_EMAIL", 
                 body: "Hello, \n\n You can download your project specific VPAT docs from : https://ent.box.com/s/1obtcid6ml9zcdfcwzf01g51f3mfme40 \n\nThank you! DevOps Team", 
                 subject: 'VPAT docs', 
                 to: "$submitter")
        }
      }
    }
    
    stage('Sending email to support team, VPAT started') {
      steps{
        script {
        echo "Sending documents by email to ..."
          
        echo "$ADMIN_EMAIL"
        }
      }
    }
    stage('VPAT Testing and Writing completed? and proceed for approval ?') {
      steps{
        script {
        timeout(time:10, unit:'DAYS') {
          
          
          
          def userInput = input(
                            id: 'userInput', message: 'Do NOT click unless you already login! Only authorized person shall approve',
                            parameters: [
                                    validatingString(defaultValue: 'None',
                                            description: 'Specify a VPAT  shared location - Box?',
                                            failedValidationMessage: 'Specify url in proper format',
                                            regex: 'https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\s]{2,}',                                             
                                            name: 'vpat_docs', required: true)
                            ])
          
//String name, String defaultValue, String regex, String failedValidationMessage, String description
//          wrap([$class: 'validatingString']) {
//            def validatedInput = validatingString(name: 'userInput', regex: 'http', failedValidationMessage: 'Failed Regex', description: 'This is sample desc') {  
//          }
          
         
          
          vpat_docs = userInput.vpat_docs?:' '
          echo "VPAT Doc is at : $vpat_docs"
        }//timeout end
        }//script end
      }//step end
      }//stage end
      
    
    stage('VPAT completed by dev, sending email to support team for VPAT verification') {
      steps{
        script {
        echo "Sending documents by email to ..."
        echo "$ADMIN_EMAIL"
        
        echo "${params.email}"
        emailext(mimeType: 'text/html', replyTo: 'xxxx',  body: 'Request for VPAT verification', subject: 'VPAT completed - Verification start', to: 'pankaj.gupta@broadcom.com')
          
        }
      }
    }
    
    
    stage('VPAT verification completed, proceed to close the process?') {
      steps{
        script {
        timeout(time:10, unit:'DAYS') {
          userInput = input(
                    id: 'Approve1', 
                    message: 'Do NOT click unless you already login! Only authorized person shall approve', 
                    submitterParameter: 'approver' , 
                    parameters: [
                      [$class: 'BooleanParameterDefinition', 
                       defaultValue: true, description: '', name: 'Please confirm you approve this release']])
          
     
          
        }//timeout end
        }//script end
      }//step end
      }//stage end
    
    
    stage('Process close email') {
      steps{
        script {
        echo "Sending process close email ..."
        echo "$ADMIN_EMAIL"
        
        echo "${params.email}"
        emailext(mimeType: 'text/html', replyTo: 'xxxx',  body: 'Request for VPAT verification', subject: 'VPAT completed - Verification start', to: 'pankaj.gupta@broadcom.com')
          
        }
      }
    }
    
    
    stage('Cleaning WS') {
      steps{
        script {
          cleanWS()
        }
      }
    }
    
    
    }//stages end
}
